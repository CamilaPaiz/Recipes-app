import React from 'react';
import { screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import App from '../App';
import renderWithRouter from './renderWith';

const entrie = ['/drinks/12776'];
const entrieMeals = ['/meals/52777'];

describe('verifica tela done recipes', () => {
  it('verifica renderização de done recipes-drinks', async () => {
    const { history } = renderWithRouter(<App />, { initialEntries: ['/done-recipes'] });
    /* const button = await screen.findByTestId('favorite-btn');
    expect(button).toBeInTheDocument();
    const btnstart = await screen.findByTestId('start-recipe-btn');
    expect(btnstart).toBeInTheDocument();
    userEvent.click(btnstart);
    const btn = await screen.findByTestId('finish-recipe-btn');
    expect(btn).toBeInTheDocument();
    expect(history.location.pathname).toBe('/drinks/12776/in-progress');
    const checkbox0 = await screen.findByTestId('0-ingredient-step');
    const checkbox1 = await screen.findByTestId('1-ingredient-step');
    const checkbox2 = await screen.findByTestId('2-ingredient-step');
    userEvent.click(checkbox0);
    userEvent.click(checkbox1);
    userEvent.click(checkbox2);
    expect(btn).toBeEnabled();
    userEvent.click(btn);
    const btnPerfil = await screen.findByTestId('profile-top-btn');
    expect(btnPerfil).toBeInTheDocument(); */
    const btnAll = await screen.findByRole('button', { name: /all/i });
    expect(btnAll).toBeInTheDocument();
    const btnMeals = await screen.findByRole('button', { name: /meals/i });
    expect(btnMeals).toBeInTheDocument();
    const btnDrinks = await screen.findByRole('button', { name: /drinks/i });
    expect(btnDrinks).toBeInTheDocument();
    const btnshare = await screen.findByTestId('0-horizontal-share-btn');
    expect(btnshare).toBeInTheDocument();
    userEvent.click(btnshare);
    const image = await screen.findByRole('img', { name: /card-drink/i });
    expect(image).toBeInTheDocument();
    userEvent.click(image);
    expect(history.location.pathname).toBe(entrie);
  });
  it('verifica renderização de done recipes -meals', async () => {
    const { history } = renderWithRouter(<App />, { initialEntries: ['/done-recipes'] });
    /*  const button = await screen.findByTestId('favorite-btn');
    expect(button).toBeInTheDocument();
    const btnstart = await screen.findByTestId('start-recipe-btn');
    expect(btnstart).toBeInTheDocument();
    userEvent.click(btnstart);
    const btn = await screen.findByTestId('finish-recipe-btn');
    expect(btn).toBeInTheDocument();
    expect(history.location.pathname).toBe('/meals/52777/in-progress');

    const checkbox0 = await screen.findByTestId('0-ingredient-step');
    const checkbox1 = await screen.findByTestId('1-ingredient-step');
    const checkbox2 = await screen.findByTestId('2-ingredient-step');
    const checkbox3 = await screen.findByTestId('3-ingredient-step');
    const checkbox4 = await screen.findByTestId('4-ingredient-step');
    const checkbox5 = await screen.findByTestId('5-ingredient-step');
    const checkbox6 = await screen.findByTestId('6-ingredient-step');
    const checkbox7 = await screen.findByTestId('7-ingredient-step');
    const checkbox8 = await screen.findByTestId('8-ingredient-step');
    userEvent.click(checkbox0);
    userEvent.click(checkbox1);
    userEvent.click(checkbox2);
    userEvent.click(checkbox3);
    userEvent.click(checkbox4);
    userEvent.click(checkbox5);
    userEvent.click(checkbox6);
    userEvent.click(checkbox7);
    userEvent.click(checkbox8);
    expect(btn).toBeEnabled();
    userEvent.click(btn);
    const btnPerfil = await screen.findByTestId('profile-top-btn');
    expect(btnPerfil).toBeInTheDocument();
    expect(history.location.pathname).toBe('/done-recipes'); */
    const btnAll = await screen.findByRole('button', { name: /all/i });
    expect(btnAll).toBeInTheDocument();
    const btnMeals = await screen.findByRole('button', { name: /meals/i });
    expect(btnMeals).toBeInTheDocument();
    const btnDrinks = await screen.findByRole('button', { name: /drinks/i });
    expect(btnDrinks).toBeInTheDocument();
    const btnshare = await screen.findByTestId('0-horizontal-share-btn');
    expect(btnshare).toBeInTheDocument();
    userEvent.click(btnshare);
    const image = await screen.findByRole('img', { name: /card-meal/i });
    expect(image).toBeInTheDocument();
    userEvent.click(image);
    expect(history.location.pathname).toBe(entrieMeals);
  });
});
